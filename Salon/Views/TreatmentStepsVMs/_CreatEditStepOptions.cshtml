@model List<Salon.Models.StepOptions>

<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h2>Optionen "@ViewBag.Name" bearbeiten/erstellen</h2>
        </div>
        <div class="modal-body">
            <div class="inline-text title">
                <p>Reihenfolge</p>
                <p>Titel</p>
                <p>Beschreibung</p>
                <p>Aktiv</p>
                <p></p>
            </div>

            <div id="StepId" class="hidden" data-id="@ViewBag.StepId"></div>
            <div class="panel-group" id="accordion2">
                @using (Html.BeginForm("EditOptions", "TreatmentStepsVMs", FormMethod.Post, new { }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    for (int i = 0; i < Model.Count(); i++)
                    {
                        <div class="panel">
                            <div class="panel-heading panel-default">
                                @Html.HiddenFor(modelItem => modelItem[i].StepOptionId)
                                @Html.HiddenFor(modelItem => modelItem[i].StepId)
                                <div class="inline-text">
                                    <div class="form-group">
                                        @Html.EditorFor(modelItem => modelItem[i].Position, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(modelItem => modelItem[i].Position, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.EditorFor(modelItem => modelItem[i].Option, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(modelItem => modelItem[i].Option, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.EditorFor(modelItem => modelItem[i].Description, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(modelItem => modelItem[i].Description, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.EditorFor(modelItem => modelItem[i].isActive, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(modelItem => modelItem[i].isActive, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <a href="javascript:void(0)" class="btn btn-danger" id="deleteOption">&times;</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="special">
                        <input id="CreateOption" type="button" onclick="addOptionRow();" value="Option hinzufügen" class="btn btn-default" />
                        <input type="submit" value="Speichern" class="btn btn-default" name="EditOptions" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>